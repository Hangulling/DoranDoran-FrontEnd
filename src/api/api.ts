import axios from 'axios'

const getBaseURL = (port?: number): string => {
  const apiBaseUrl = import.meta.env.VITE_API_BASE_URL || 'http://3.21.177.186'
  if (!import.meta.env.VITE_API_BASE_URL) {
    console.error('‚ùå VITE_API_BASE_URLÏù¥ ÏÑ§Ï†ïÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§! Í∏∞Î≥∏Í∞íÏùÑ ÏÇ¨Ïö©Ìï©ÎãàÎã§.')
  }
  return port ? `${apiBaseUrl}:${port}` : apiBaseUrl
}

// Ïù∏Ï¶ù ÏÑúÎπÑÏä§ (Ìè¨Ìä∏ 8081)
export const authApi = axios.create({
  baseURL: getBaseURL(8081),
  timeout: 10000,
  headers: { 'Content-Type': 'application/json' },
})

// ÏÇ¨Ïö©Ïûê ÏÑúÎπÑÏä§ (Ìè¨Ìä∏ 8082)
export const userApi = axios.create({
  baseURL: getBaseURL(8082),
  timeout: 10000,
  headers: { 'Content-Type': 'application/json' },
})

// Ï±ÑÌåÖ ÏÑúÎπÑÏä§ (Ìè¨Ìä∏ 8083)
export const chatApi = axios.create({
  baseURL: getBaseURL(8083),
  timeout: 10000,
  headers: { 'Content-Type': 'application/json' },
})

userApi.interceptors.request.use(
  config => {
    // const token = localStorage.getItem('accessToken')
    // if (token) {
    //   config.headers.Authorization = `Bearer ${token}`
    // }
    return config
  },
  error => {
    console.error('üö® ÏöîÏ≤≠ ÏÑ§Ï†ï Ï§ë ÏóêÎü¨:', error)
    return Promise.reject(error)
  }
)

userApi.interceptors.response.use(
  response => response,
  error => {
    // const status = error.response?.status
    // if (status === 401) {
    //   console.warn('Ïù∏Ï¶ù ÎßåÎ£å')
    //   localStorage.removeItem('accessToken')
    //   window.location.href = '/login'
    // }
    return Promise.reject(error)
  }
)

export default {
  userApi,
  authApi,
  chatApi,
}
